FROM {{ os_name }}:{{ os_version }}

LABEL tailor="bundle"

SHELL ["/bin/bash", "-c"]

ARG AWS_ACCESS_KEY_ID
ENV AWS_ACCESS_KEY_ID ${AWS_ACCESS_KEY_ID}

ARG AWS_SECRET_ACCESS_KEY
ENV AWS_SECRET_ACCESS_KEY ${AWS_SECRET_ACCESS_KEY}

ENV DEBIAN_FRONTEND noninteractive
ENV PYTHONUNBUFFERED 1

RUN apt-get update && apt-get install --no-install-recommends -y \
    locales curl gnupg sudo ccache software-properties-common expect
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8

# Configure ccache
RUN apt-get update && apt-get install --no-install-recommends -y ccache && \
    ccache -M 5G && \
    ccache --set-config=cache_dir=/ccache

# Install apt s3 support
RUN apt-get update && apt-get install -y python-all-dev python-pip python-setuptools python-wheel && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 379CE192D401AB61 && \
    echo "deb http://dl.bintray.com/lucidsoftware/apt/ lucid main" >> /etc/apt/sources.list && \
    apt-get update && apt-get install -y apt-boto-s3

# Add package mirror
# TODO(pbovbel) read this from configuration
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 142D5F1683E1528B && \
    echo "deb [arch=amd64] s3://s3.amazonaws.com/{{ bucket_name }}/{{ release_track }}/ubuntu {{ os_version }}-mirror main" >> /etc/apt/sources.list && \
    apt-get update && apt-get dist-upgrade -y

# Install colcon build tool
RUN apt-get update && apt-get install --no-install-recommends -y \
{% if os_version == 'xenial' %}
    python3-dev \
    python3-pip \
{% endif %}
    python3-colcon-common-extensions

{% if os_version == 'xenial' %}
# xenial needs a newer setuptools for colcon to work
RUN pip3 install -U \
    setuptools
{% endif %}

# Install build and run dependencies
# TODO(pbovbel) install contrainted versions of packages rather than using 'regex_replace'
RUN apt-get update && RTI_NC_LICENSE_ACCEPTED=yes apt-get install --no-install-recommends -y \
  {{ build_depends | union(run_depends) | sort | join(' ') | regex_replace('\(.*?\)', '') }}

# Create non-root user
RUN groupadd -r tailor && useradd -ms /bin/bash -g tailor -G sudo tailor
USER tailor

RUN mkdir -p /home/tailor && \
    usermod -d /home/tailor tailor

RUN ccache -M 5G && \
    ccache --set-config=cache_dir=/ccache
